name: Run prettier, eslint and stylelint in changed files from this PR

on:
  pull_request:
    branches: ['master']

env:
  STORE_PATH: .pnpm-store
  NODE_VERSION: 18.18.2

jobs:
  code-style:
    runs-on: ubuntu-latest
    name: code-style
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - name: Get PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup PNPM cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get all changed files
        id: all-changed-files
        uses: tj-actions/changed-files@v41

      - name: Run prettier in all files
        # if: steps.all-changed-files.outputs.any_changed == 'true'
        env:
          files: ${{ steps.all-changed-files.outputs.all_changed_files }}
        run: pnpm exec prettier $files --check --ignore-unknown

      - name: Get all code files, Get all style files, Get all changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files_yaml: |
            code:
              - '**.js'
              - '**.ts'
              - '**.tsx'
              - '**.jsx'
              - '**.mjs'
              - '**.cjs'
            style:
              - '**.scss'
              - '**.css'

      - name: Run eslint in code files
        if: steps.changed-files.outputs.code_any_changed == 'true'
        env:
          files: ${{ steps.changed-files.outputs.code_all_changed_files }}
        run: pnpm exec eslint $files --report-unused-disable-directives --max-warnings 0

      - name: Run stylelint in scss files
        if: steps.changed-files.outputs.style_any_changed == 'true'
        env:
          files: ${{ steps.changed-files.outputs.style_all_changed_files }}
        run: pnpm exec stylelint $files --allow-empty-input
