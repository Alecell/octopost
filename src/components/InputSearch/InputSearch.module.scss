@use '../../styles/global';

$inputHorizontalSpacing: 0.8rem;

@mixin apply-color($color) {
  &.containerFocus {
    color: $color;
  }

  .wrapper {
    .label {
      &.labelAnimate {
        color: $color;
      }
    }
  }
}

.container {
  width: 100%;

  color: global.$secondaryGray;
  font-size: 1.4rem;

  margin-top: 1rem;

  margin-bottom: 2.4rem;
  letter-spacing: 0;

  &.containerError {
    color: global.$secondaryRed;
  }

  &.containerFocus {
    color: global.$secondaryPurple;
  }

  &.containerFilled {
    color: #34495e;
  }

  .wrapper {
    width: 100%;
    height: 5.6rem;

    display: flex;

    align-items: center;

    justify-content: space-between;

    padding: 0 $inputHorizontalSpacing;

    position: relative;

    .content {
      display: flex;

      align-items: center;

      position: absolute;
      inset: 0;

      .affix {
        height: 70%;

        display: flex;

        align-items: center;
        justify-content: center;

        margin: 0.7rem;

        position: relative;
        z-index: 1;
        aspect-ratio: 1;
      }

      .affixButton {
        height: 100%;
      }

      .inputWrapper {
        height: 100%;

        flex-grow: 1;

        margin: 0 $inputHorizontalSpacing;

        position: relative;

        .label {
          display: flex;

          align-items: center;

          color: currentColor;
          font-size: 1.4rem;

          position: absolute;
          top: 50%;

          transform: translate(0, -50%);

          transition: all 0.2s ease-in-out;

          pointer-events: none;

          &.labelAnimate {
            color: global.$secondaryPurple;
            font-size: 1rem;

            position: absolute;
            top: 0;
            left: 14px;
          }

          &.labelError {
            color: global.$secondaryRed;
          }

          &.labelFilled {
            color: global.$secondaryGray;
          }
        }

        .input {
          width: 100%;
          height: 100%;

          color: #000;
          font-size: 1.6rem;

          padding: 0 0 0 0.5rem;
          border: 0;

          background: none;

          &:focus {
            outline: 0;
          }

          &::placeholder {
            color: transparent;
          }
        }
      }
    }

    .fieldset {
      margin: 0;
      padding: 0 $inputHorizontalSpacing;
      border: 1px solid currentColor;

      position: absolute;
      top: -5px;
      right: 0;
      bottom: 0;
      left: 0;

      border-radius: 4px;

      pointer-events: none;

      &.fieldsetFocus {
        border: 2px solid;
      }

      &.fieldsetError {
        border: 2px solid global.$secondaryRed;
      }

      .legend {
        width: auto;
        max-width: 0.01px;
        height: 11px;

        display: block;

        text-align: left;

        padding: 0;

        transition: max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;

        visibility: hidden;

        &.legendFocus {
          max-width: 100%;
        }

        &.legendFilled {
          width: auto;
        }

        .legendTitle {
          font-size: 1rem;

          padding: 0 0.4rem;
        }
      }
    }
  }

  .iconLeft {
    width: 20px;
    height: 20px;

    display: flex;

    align-items: center;

    position: absolute;
    left: 15px;
  }

  .iconRight {
    width: 20px;
    height: 20px;

    display: flex;

    align-items: center;

    position: absolute;
    right: 15px;

    z-index: 11;

    &:hover {
      transform: scale(0.94);

      cursor: pointer;
    }
  }

  .errorWrapper {
    display: flex;

    align-items: center;

    color: currentColor;
    font-weight: normal;

    margin: 0.5rem 0 0 0.5rem;

    .errorMessage {
      color: global.$secondaryRed;
      text-align: start;
      font-size: 1.1rem;

      margin-bottom: -0.1rem;
    }
  }
}
